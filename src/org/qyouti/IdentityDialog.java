/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.qyouti;

import java.awt.Component;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Frame;
import java.math.BigInteger;
import java.nio.ByteBuffer;
import java.nio.IntBuffer;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import org.bouncycastle.openpgp.PGPPrivateKey;
import org.bouncycastle.openpgp.PGPSecretKey;
import org.bouncycastle.util.Arrays;
import org.qyouti.compositefile.EncryptedCompositeFileUser;
import org.qyouti.crypto.CryptographyManager;
import org.qyouti.crypto.CryptographyManagerException;

/**
 *
 * @author maber01
 */
public class IdentityDialog
        extends javax.swing.JDialog
{
  CryptographyManager cryptoman;
  EncryptedCompositeFileUser user;

  private static final DateFormat df = new SimpleDateFormat( "HH:mm dd/MMM/yyyy" );

  class Entry
  {
    PGPSecretKey key;
    Date creationdate;
  }

  private ArrayList<Entry> entries = new ArrayList<>();
  
  /**
   * Creates new form IdentityDialog
   * @param parent
   * @param cryptoman
   */
  public IdentityDialog(Frame parent, CryptographyManager cryptoman )
  {
    super(parent, true);
    this.cryptoman = cryptoman;
    initComponents();    
    updateFields();
  }

  private void addEntry( PGPSecretKey key )
  {
    Entry entry = new Entry();
    entry.key = key;
    entry.creationdate = CryptographyManager.getSecretKeyCreationDate(key);
    entries.add(entry);
  }

  private void sortEntries()
  {
    entries.sort( new Comparator<Entry>() {
      @Override
      public int compare(Entry o1, Entry o2)
      {
        long da = 0L;
        long db = 0L;
        if ( o1.creationdate != null )
          da = o1.creationdate.getTime();
        if ( o2.creationdate != null )
          db = o2.creationdate.getTime();
        if ( da < db ) return -1;
        if ( da > db ) return 1;
        return 0;
      }
    } );
  }
  
  private Entry getSelectedEntry()
  {
    Component c = tabbedpane.getSelectedComponent();
    if ( c == null || !(c instanceof SecretKeyPanel) )
      return null;
    return entries.get( tabbedpane.getSelectedIndex() );
  }
  
  private final void updateFields()
  {
    entries.clear();
    PGPSecretKey[] seckeys = cryptoman.getSecretKeys();
    for ( PGPSecretKey k : seckeys )
      addEntry( k );
    sortEntries();
    PGPSecretKey preferredseckey = cryptoman.getPreferredSecretKey();
    
    tabbedpane.removeAll();
    createbutton.setEnabled( true );
    deletebutton.setEnabled( false );
    selectbutton.setEnabled( false );
    
    if ( seckeys.length == 0 )
    {
      JPanel blank = new JPanel();
      blank.setLayout( new FlowLayout() );
      blank.add( new JLabel( "No key pairs in your key store." ) );
      tabbedpane.add( "Empty", blank ); 
      return;
    }

    int selected = -1;
    for ( int i=0; i<entries.size(); i++ )
    {
      Entry e = entries.get(i);
      String epw = cryptoman.getEncryptedWindowsPassword( e.key );
      SecretKeyPanel skpanel = new SecretKeyPanel( e.key, epw != null );
      tabbedpane.add( (e.creationdate==null)?"Unknown Date":df.format(e.creationdate), skpanel );
      if ( e.key == preferredseckey )
      {
        selected = i;
        tabbedpane.setTitleAt( i, "Preferred" );
      }
    }

    deletebutton.setEnabled( true );
    selectbutton.setEnabled( true );
    
    tabbedpane.setSelectedIndex( (selected>0)?selected:0 );
  }

  
  /**
   * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
   * content of this method is always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents()
  {

    jLabel2 = new javax.swing.JLabel();
    jPanel3 = new javax.swing.JPanel();
    jTextArea1 = new javax.swing.JTextArea();
    jPanel1 = new javax.swing.JPanel();
    tabbedpane = new javax.swing.JTabbedPane();
    jPanel2 = new javax.swing.JPanel();
    createbutton = new javax.swing.JButton();
    deletebutton = new javax.swing.JButton();
    selectbutton = new javax.swing.JButton();
    closebutton = new javax.swing.JButton();

    jLabel2.setText("jLabel2");

    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

    jPanel3.setLayout(new java.awt.BorderLayout());

    jTextArea1.setEditable(false);
    jTextArea1.setColumns(20);
    jTextArea1.setLineWrap(true);
    jTextArea1.setRows(2);
    jTextArea1.setText("Select the key pair to use for encrypting/decrypting data.");
    jTextArea1.setWrapStyleWord(true);
    jTextArea1.setOpaque(false);
    jPanel3.add(jTextArea1, java.awt.BorderLayout.PAGE_START);

    getContentPane().add(jPanel3, java.awt.BorderLayout.NORTH);

    jPanel1.setMinimumSize(new java.awt.Dimension(650, 400));
    jPanel1.setPreferredSize(new java.awt.Dimension(650, 400));
    jPanel1.setLayout(new java.awt.BorderLayout());

    tabbedpane.setMinimumSize(new java.awt.Dimension(500, 300));
    tabbedpane.setPreferredSize(new java.awt.Dimension(500, 300));
    jPanel1.add(tabbedpane, java.awt.BorderLayout.CENTER);

    getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

    createbutton.setText("Create...");
    createbutton.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        createbuttonActionPerformed(evt);
      }
    });
    jPanel2.add(createbutton);

    deletebutton.setText("Delete");
    deletebutton.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        deletebuttonActionPerformed(evt);
      }
    });
    jPanel2.add(deletebutton);

    selectbutton.setText("Select");
    selectbutton.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        selectbuttonActionPerformed(evt);
      }
    });
    jPanel2.add(selectbutton);

    closebutton.setText("Cancel");
    closebutton.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        closebuttonActionPerformed(evt);
      }
    });
    jPanel2.add(closebutton);

    getContentPane().add(jPanel2, java.awt.BorderLayout.SOUTH);

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void closebuttonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_closebuttonActionPerformed
  {//GEN-HEADEREND:event_closebuttonActionPerformed
    dispose();
  }//GEN-LAST:event_closebuttonActionPerformed

  private void createbuttonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_createbuttonActionPerformed
  {//GEN-HEADEREND:event_createbuttonActionPerformed
    
    CreateIdentityDialog cid = new CreateIdentityDialog( (Frame)getParent(), cryptoman );
    cid.setModal( true );
    cid.setVisible( true );
    
    System.out.println( "CreateIdentityDialog created new identity." );
    
    updateFields();
  }//GEN-LAST:event_createbuttonActionPerformed

  private void deletebuttonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_deletebuttonActionPerformed
  {//GEN-HEADEREND:event_deletebuttonActionPerformed
    
    Entry e = getSelectedEntry();
    if ( e == null )
    {
      JOptionPane.showMessageDialog( rootPane, "No key pair is selected." );
      return;
    }
    
    if ( 0 != JOptionPane.showConfirmDialog( rootPane, 
            "If you delete the key pair you will permanently lose \n" +
            "access to files protected with just your public key. \n" +
            "In the case of files which others also have access to \n" +
            "you may be able to regain access with their cooperation.\n\n" +
            "Are you sure you want to delete your key pair?",
            "Delete Key Pair",
            JOptionPane.YES_NO_OPTION ) )
      return;
    
    if ( !cryptoman.deleteKeyPair( e.key ) )
      JOptionPane.showMessageDialog( rootPane, "There was a technical fault attempting to delete your key pair." );
    updateFields();
    
  }//GEN-LAST:event_deletebuttonActionPerformed

  private void selectbuttonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_selectbuttonActionPerformed
  {//GEN-HEADEREND:event_selectbuttonActionPerformed
    Component c = tabbedpane.getSelectedComponent();
    if ( !(c instanceof SecretKeyPanel ) )
      return;
    
    PGPSecretKey seckey;
    Entry e = this.getSelectedEntry();
    cryptoman.setPreferredSecretKey( e.key );
    updateFields();
    dispose();
  }//GEN-LAST:event_selectbuttonActionPerformed

  
  private char[] promptForPassword()
  {
    JPanel panel = new JPanel();
    JLabel label = new JLabel("Enter a password:");
    JPasswordField pass = new JPasswordField();
    panel.setLayout(new FlowLayout() );
    pass.setMinimumSize( new Dimension(200,30) );
    pass.setPreferredSize( pass.getMinimumSize() );
    pass.setSize( pass.getMinimumSize() );
    panel.add(label);
    panel.add(pass);
    panel.doLayout();
    String[] options = new String[]{"O.K.", "Cancel"};
    int option = JOptionPane.showOptionDialog(null, panel, "Enter Password",
                             JOptionPane.NO_OPTION, JOptionPane.PLAIN_MESSAGE,
                             null, options, options[1]);
    if(option == 0) // pressing OK button
      return pass.getPassword();
    return null;
  }
  
 


  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton closebutton;
  private javax.swing.JButton createbutton;
  private javax.swing.JButton deletebutton;
  private javax.swing.JLabel jLabel2;
  private javax.swing.JPanel jPanel1;
  private javax.swing.JPanel jPanel2;
  private javax.swing.JPanel jPanel3;
  private javax.swing.JTextArea jTextArea1;
  private javax.swing.JButton selectbutton;
  private javax.swing.JTabbedPane tabbedpane;
  // End of variables declaration//GEN-END:variables
}
