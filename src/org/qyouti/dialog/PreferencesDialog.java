/*
 *
 * Copyright 2010 Leeds Metropolitan University
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you may 
 * not use this file except in compliance with the License. You may obtain 
 * a copy of the License at 
 * 
 * http://www.apache.org/licenses/LICENSE-2.0 
 * 
 * Unless required by applicable law or agreed to in writing, software 
 * distributed under the License is distributed on an "AS IS" BASIS, 
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
 * See the License for the specific language governing permissions and 
 * limitations under the License. 
 *
 *
 */



/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * PreferencesDialog.java
 *
 * Created on 20-Aug-2009, 10:31:00
 */

package org.qyouti.dialog;

import java.awt.Font;
import javax.swing.JFrame;
import org.qyouti.QyoutiPreferences;

/**
 *
 * @author jon
 */
public class PreferencesDialog extends javax.swing.JDialog {

  QyoutiPreferences preferences;

  /** Creates new form PreferencesDialog
   * @param parent
   * @param preferences
   */
    public PreferencesDialog(java.awt.Frame parent, QyoutiPreferences preferences ) {
        super(parent, true);
        initComponents();
        this.preferences = preferences;
    }

  @Override
    public void setVisible( boolean b )
    {
      if ( b )
      {
        Font font = new Font( preferences.getProperty( "qyouti.print.font-family" ), Font.PLAIN, 14 );
        jFontChooser1.setSelectedFontFamily( font.getFamily() );
        jFontChooser1.setSelectedFontSize( 72 );
        jFontChooser1.setSelectedFontStyle( Font.PLAIN );
        String qrec = preferences.getProperty( "qyouti.qrcode.error-correction" );
        if ( "H".equalsIgnoreCase( qrec ) )
          qrErrorCorrectionList.setSelectedIndex( 0 );
        if ( "M".equalsIgnoreCase( qrec ) )
          qrErrorCorrectionList.setSelectedIndex( 1 );
        if ( "L".equalsIgnoreCase( qrec ) )
          qrErrorCorrectionList.setSelectedIndex( 2 );
        if ( "Q".equalsIgnoreCase( qrec ) )
          qrErrorCorrectionList.setSelectedIndex( 3 );
      }
      super.setVisible( b );
    }


    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jTabbedPane1 = new javax.swing.JTabbedPane();
    jPanel1 = new javax.swing.JPanel();
    jFontChooser1 = new say.swing.JFontChooser();
    jPanel2 = new javax.swing.JPanel();
    jScrollPane1 = new javax.swing.JScrollPane();
    qrErrorCorrectionList = new javax.swing.JList();
    jLabel1 = new javax.swing.JLabel();
    jPanel3 = new javax.swing.JPanel();
    prefsApplyButton = new javax.swing.JButton();
    prefsCancelButton = new javax.swing.JButton();

    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
    org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(org.qyouti.QyoutiApp.class).getContext().getResourceMap(PreferencesDialog.class);
    setTitle(resourceMap.getString("Form.title")); // NOI18N
    setName("Form"); // NOI18N

    jTabbedPane1.setName("jTabbedPane1"); // NOI18N

    jPanel1.setName("jPanel1"); // NOI18N
    jPanel1.setLayout(new java.awt.BorderLayout());

    jFontChooser1.setName("jFontChooser1"); // NOI18N
    jPanel1.add(jFontChooser1, java.awt.BorderLayout.CENTER);

    jTabbedPane1.addTab(resourceMap.getString("jPanel1.TabConstraints.tabTitle"), jPanel1); // NOI18N

    jPanel2.setName("jPanel2"); // NOI18N

    jScrollPane1.setName("jScrollPane1"); // NOI18N

    qrErrorCorrectionList.setModel(new javax.swing.AbstractListModel() {
      String[] strings = { "High", "Medium", "Low", "\"Q\"" };
      public int getSize() { return strings.length; }
      public Object getElementAt(int i) { return strings[i]; }
    });
    qrErrorCorrectionList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
    qrErrorCorrectionList.setName("qrErrorCorrectionList"); // NOI18N
    jScrollPane1.setViewportView(qrErrorCorrectionList);

    jLabel1.setLabelFor(qrErrorCorrectionList);
    jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
    jLabel1.setName("jLabel1"); // NOI18N

    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
    jPanel2.setLayout(jPanel2Layout);
    jPanel2Layout.setHorizontalGroup(
      jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel2Layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
          .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        .addContainerGap(366, Short.MAX_VALUE))
    );
    jPanel2Layout.setVerticalGroup(
      jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel2Layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(jLabel1)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addContainerGap(180, Short.MAX_VALUE))
    );

    jTabbedPane1.addTab(resourceMap.getString("jPanel2.TabConstraints.tabTitle"), jPanel2); // NOI18N

    getContentPane().add(jTabbedPane1, java.awt.BorderLayout.CENTER);

    jPanel3.setName("jPanel3"); // NOI18N

    prefsApplyButton.setText(resourceMap.getString("prefsApplyButton.text")); // NOI18N
    prefsApplyButton.setName("prefsApplyButton"); // NOI18N
    prefsApplyButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        prefsApplyButtonActionPerformed(evt);
      }
    });
    jPanel3.add(prefsApplyButton);

    prefsCancelButton.setText(resourceMap.getString("prefsCancelButton.text")); // NOI18N
    prefsCancelButton.setName("prefsCancelButton"); // NOI18N
    prefsCancelButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        prefsCancelButtonActionPerformed(evt);
      }
    });
    jPanel3.add(prefsCancelButton);

    getContentPane().add(jPanel3, java.awt.BorderLayout.SOUTH);

    pack();
  }// </editor-fold>//GEN-END:initComponents

    private void prefsCancelButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_prefsCancelButtonActionPerformed
    {//GEN-HEADEREND:event_prefsCancelButtonActionPerformed

      dispose();
    }//GEN-LAST:event_prefsCancelButtonActionPerformed

    private void prefsApplyButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_prefsApplyButtonActionPerformed
    {//GEN-HEADEREND:event_prefsApplyButtonActionPerformed

      preferences.setProperty("qyouti.print.font-family", jFontChooser1.getSelectedFontFamily() );
      switch ( qrErrorCorrectionList.getSelectedIndex() )
      {
        case 0:
          preferences.setProperty( "qyouti.qrcode.error-correction", "H" );
          break;
        case 1:
          preferences.setProperty( "qyouti.qrcode.error-correction", "M" );
          break;
        case 2:
          preferences.setProperty( "qyouti.qrcode.error-correction", "L" );
          break;
        case 3:
          preferences.setProperty( "qyouti.qrcode.error-correction", "Q" );
          break;
        default:
          preferences.setProperty( "qyouti.qrcode.error-correction", "L" );
      }
      dispose();
    }//GEN-LAST:event_prefsApplyButtonActionPerformed


  // Variables declaration - do not modify//GEN-BEGIN:variables
  private say.swing.JFontChooser jFontChooser1;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JPanel jPanel1;
  private javax.swing.JPanel jPanel2;
  private javax.swing.JPanel jPanel3;
  private javax.swing.JScrollPane jScrollPane1;
  private javax.swing.JTabbedPane jTabbedPane1;
  private javax.swing.JButton prefsApplyButton;
  private javax.swing.JButton prefsCancelButton;
  private javax.swing.JList qrErrorCorrectionList;
  // End of variables declaration//GEN-END:variables

}
