/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.qyouti;

import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Frame;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import org.bouncycastle.openpgp.PGPPublicKey;
import org.bouncycastle.openpgp.PGPSecretKey;
import org.quipto.compositefile.EncryptedCompositeFileUser;
import org.qyouti.crypto.CryptographyManager;
import org.qyouti.data.KeyData;

/**
 *
 * @author maber01
 */
public class TeamDialog
        extends javax.swing.JDialog
{
  CryptographyManager cryptoman;
  EncryptedCompositeFileUser user;

  private static final DateFormat df = new SimpleDateFormat( "HH:mm dd/MMM/yyyy" );

  private KeyData publicentries;
  
  /**
   * Creates new form IdentityDialog
   * @param parent
   * @param cryptoman
   */
  public TeamDialog(Frame parent, CryptographyManager cryptoman )
  {
    super(parent, true);
    this.cryptoman = cryptoman;
    publicentries = new KeyData( cryptoman );
    initComponents();    
    trustedpublickeylist.setModel(publicentries);
    jTree1.setModel( cryptoman.getTeamTreeModel() );
    updateFields();
  }


//  private void sortEntries()
//  {
//    entries.sort( new Comparator<Entry>() {
//      @Override
//      public int compare(Entry o1, Entry o2)
//      {
//        long da = 0L;
//        long db = 0L;
//        if ( o1.creationdate != null )
//          da = o1.creationdate.getTime();
//        if ( o2.creationdate != null )
//          db = o2.creationdate.getTime();
//        if ( da < db ) return -1;
//        if ( da > db ) return 1;
//        return 0;
//      }
//    } );
//  }
  
 
  private final void updateButtons()
  {
    int selectedpane = tabbedpane.getSelectedIndex();
    int selecteditem=-1;
    if ( selectedpane == 1 )
      selecteditem = trustedpublickeylist.getSelectedIndex();
    addbutton.setEnabled( true  );
    deletebutton.setEnabled( selecteditem >= 0 );
  }
  
  private final void updateFields()
  {
    publicentries.clear();
    
    PGPPublicKey[] pubkeys;
    pubkeys = cryptoman.getTeamPublicKeys();
    for ( PGPPublicKey k : pubkeys )
      publicentries.addKey( k );

    updateSelectedTrustedKeyPane();
    updateButtons();
  }

  private void updateSelectedTrustedKeyPane()
  {
    trustedsplitpane.setRightComponent(null);
    int selected = trustedpublickeylist.getSelectedIndex();
    if ( selected >= 0 )
    {
      PGPPublicKey puck = publicentries.getKeyAt(selected);
      PublicKeyPanel pukpanel = new PublicKeyPanel( puck );
      trustedsplitpane.setRightComponent( pukpanel );
    }    
    else
    {
      JPanel blank = new JPanel();
      blank.setLayout( new FlowLayout() );
      blank.add( new JLabel( cryptoman.personalKeyStoreFileExists()?"Create or select a key pair.":"No personal key store exists." ) );
      trustedsplitpane.setRightComponent( blank ); 
      return;
    }
  }

  
  /**
   * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
   * content of this method is always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents()
  {

    jLabel2 = new javax.swing.JLabel();
    jPanel3 = new javax.swing.JPanel();
    jLabel1 = new javax.swing.JLabel();
    keystorelabel = new javax.swing.JLabel();
    jPanel1 = new javax.swing.JPanel();
    tabbedpane = new javax.swing.JTabbedPane();
    jScrollPane3 = new javax.swing.JScrollPane();
    jTree1 = new javax.swing.JTree();
    trustedsplitpane = new javax.swing.JSplitPane();
    jScrollPane2 = new javax.swing.JScrollPane();
    trustedpublickeylist = new javax.swing.JList<>();
    jPanel2 = new javax.swing.JPanel();
    addbutton = new javax.swing.JButton();
    deletebutton = new javax.swing.JButton();
    closebutton = new javax.swing.JButton();

    jLabel2.setText("jLabel2");

    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

    jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
    jLabel1.setText("Team Key Store:");

    javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
    jPanel3.setLayout(jPanel3Layout);
    jPanel3Layout.setHorizontalGroup(
      jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel3Layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(18, 18, 18)
        .addComponent(keystorelabel, javax.swing.GroupLayout.DEFAULT_SIZE, 759, Short.MAX_VALUE)
        .addContainerGap())
    );
    jPanel3Layout.setVerticalGroup(
      jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel3Layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel1)
          .addComponent(keystorelabel))
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    getContentPane().add(jPanel3, java.awt.BorderLayout.NORTH);

    jPanel1.setMinimumSize(new java.awt.Dimension(650, 400));
    jPanel1.setPreferredSize(new java.awt.Dimension(650, 400));
    jPanel1.setLayout(new java.awt.BorderLayout());

    tabbedpane.setMinimumSize(new java.awt.Dimension(500, 300));
    tabbedpane.setPreferredSize(new java.awt.Dimension(500, 300));
    tabbedpane.addChangeListener(new javax.swing.event.ChangeListener()
    {
      public void stateChanged(javax.swing.event.ChangeEvent evt)
      {
        tabbedpaneStateChanged(evt);
      }
    });
    tabbedpane.addPropertyChangeListener(new java.beans.PropertyChangeListener()
    {
      public void propertyChange(java.beans.PropertyChangeEvent evt)
      {
        tabbedpanePropertyChange(evt);
      }
    });

    jScrollPane3.setViewportView(jTree1);

    tabbedpane.addTab("Team Trust Map", jScrollPane3);

    trustedsplitpane.setDividerLocation(200);
    trustedsplitpane.setDividerSize(10);
    trustedsplitpane.setResizeWeight(0.5);

    trustedpublickeylist.setModel(new javax.swing.AbstractListModel<String>()
    {
      String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
      public int getSize() { return strings.length; }
      public String getElementAt(int i) { return strings[i]; }
    });
    trustedpublickeylist.addListSelectionListener(new javax.swing.event.ListSelectionListener()
    {
      public void valueChanged(javax.swing.event.ListSelectionEvent evt)
      {
        trustedpublickeylistValueChanged(evt);
      }
    });
    jScrollPane2.setViewportView(trustedpublickeylist);

    trustedsplitpane.setLeftComponent(jScrollPane2);

    tabbedpane.addTab("Team Keys", trustedsplitpane);

    jPanel1.add(tabbedpane, java.awt.BorderLayout.CENTER);

    getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

    addbutton.setText("Add Key...");
    addbutton.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        addbuttonActionPerformed(evt);
      }
    });
    jPanel2.add(addbutton);

    deletebutton.setText("Delete...");
    deletebutton.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        deletebuttonActionPerformed(evt);
      }
    });
    jPanel2.add(deletebutton);

    closebutton.setText("Close");
    closebutton.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        closebuttonActionPerformed(evt);
      }
    });
    jPanel2.add(closebutton);

    getContentPane().add(jPanel2, java.awt.BorderLayout.SOUTH);

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void closebuttonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_closebuttonActionPerformed
  {//GEN-HEADEREND:event_closebuttonActionPerformed
    dispose();
  }//GEN-LAST:event_closebuttonActionPerformed

  private void addbuttonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_addbuttonActionPerformed
  {//GEN-HEADEREND:event_addbuttonActionPerformed
    
    TeamAddMemberDialog dialog = new TeamAddMemberDialog( (Frame)getParent(), cryptoman );
    dialog.setVisible( true );
    PGPPublicKey selectedkey = dialog.getSelectedPublicKey();
    if ( selectedkey == null )
      return;
    
    if ( !cryptoman.addPublicKeyToTeam(selectedkey, dialog.isSelectedPublicKeyController() ) )
      JOptionPane.showMessageDialog( rootPane, "A technical problem occured attempting to add the key to the team." );      
    
    updateFields();
    updateButtons();
  }//GEN-LAST:event_addbuttonActionPerformed

  private void deletebuttonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_deletebuttonActionPerformed
  {//GEN-HEADEREND:event_deletebuttonActionPerformed
    
    int selected = trustedpublickeylist.getSelectedIndex();
    if ( selected < 0 )
    {
      JOptionPane.showMessageDialog( rootPane, "No key pair is selected." );
      return;
    }
    
    if ( 0 != JOptionPane.showConfirmDialog( rootPane, 
            "If you delete the key pair you will permanently lose \n" +
            "access to files protected with just your public key. \n" +
            "In the case of files which others also have access to \n" +
            "you may be able to regain access with their cooperation.\n\n" +
            "Are you sure you want to delete your key pair?",
            "Delete Key Pair",
            JOptionPane.YES_NO_OPTION ) )
      return;
    
//    if ( !cryptoman.deleteKeyPair( secretentries.getSecretKeyAt( selected ) ) )
//      JOptionPane.showMessageDialog( rootPane, "There was a technical fault attempting to delete your key pair." );
    updateFields();
    
  }//GEN-LAST:event_deletebuttonActionPerformed

  private void trustedpublickeylistValueChanged(javax.swing.event.ListSelectionEvent evt)//GEN-FIRST:event_trustedpublickeylistValueChanged
  {//GEN-HEADEREND:event_trustedpublickeylistValueChanged
    if ( evt.getValueIsAdjusting() ) return;
    System.out.println( "List selection event." );
    updateSelectedTrustedKeyPane();
    updateButtons();
  }//GEN-LAST:event_trustedpublickeylistValueChanged

  private void tabbedpanePropertyChange(java.beans.PropertyChangeEvent evt)//GEN-FIRST:event_tabbedpanePropertyChange
  {//GEN-HEADEREND:event_tabbedpanePropertyChange
    // TODO add your handling code here:
  }//GEN-LAST:event_tabbedpanePropertyChange

  private void tabbedpaneStateChanged(javax.swing.event.ChangeEvent evt)//GEN-FIRST:event_tabbedpaneStateChanged
  {//GEN-HEADEREND:event_tabbedpaneStateChanged
    updateButtons();
  }//GEN-LAST:event_tabbedpaneStateChanged

  
  private char[] promptForPassword()
  {
    JPanel panel = new JPanel();
    JLabel label = new JLabel("Enter a password:");
    JPasswordField pass = new JPasswordField();
    panel.setLayout(new FlowLayout() );
    pass.setMinimumSize( new Dimension(200,30) );
    pass.setPreferredSize( pass.getMinimumSize() );
    pass.setSize( pass.getMinimumSize() );
    panel.add(label);
    panel.add(pass);
    panel.doLayout();
    String[] options = new String[]{"O.K.", "Cancel"};
    int option = JOptionPane.showOptionDialog(null, panel, "Enter Password",
                             JOptionPane.NO_OPTION, JOptionPane.PLAIN_MESSAGE,
                             null, options, options[1]);
    if(option == 0) // pressing OK button
      return pass.getPassword();
    return null;
  }
  
 


  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton addbutton;
  private javax.swing.JButton closebutton;
  private javax.swing.JButton deletebutton;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JLabel jLabel2;
  private javax.swing.JPanel jPanel1;
  private javax.swing.JPanel jPanel2;
  private javax.swing.JPanel jPanel3;
  private javax.swing.JScrollPane jScrollPane2;
  private javax.swing.JScrollPane jScrollPane3;
  private javax.swing.JTree jTree1;
  private javax.swing.JLabel keystorelabel;
  private javax.swing.JTabbedPane tabbedpane;
  private javax.swing.JList<String> trustedpublickeylist;
  private javax.swing.JSplitPane trustedsplitpane;
  // End of variables declaration//GEN-END:variables
}
