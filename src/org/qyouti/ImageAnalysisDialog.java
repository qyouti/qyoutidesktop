/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.qyouti;

import java.awt.GridBagConstraints;
import java.awt.Insets;
import java.awt.image.BufferedImage;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import org.bullseye.XLocator;
import org.bullseye.XLocatorByCluster;
import org.bullseye.XLocatorListener;
import org.bullseye.XLocatorReport;

/**
 *
 * @author jon
 */
public class ImageAnalysisDialog extends javax.swing.JDialog implements Runnable
{
  boolean running = false;
  boolean killpending = false;
  BufferedImage image;
        
  /**
   * Creates new form ImageAnalysisDialog
   */
  public ImageAnalysisDialog(java.awt.Frame parent, boolean modal)
  {
    super(parent, modal);
    initComponents();
  }

  public void setImage( BufferedImage image )
  {
    this.image = image;
  }
  
  public void go()
  {
    if ( running ) return;
    Thread t = new Thread( this );
    t.start();
  }

  public void kill()
  {
    if ( !running || killpending ) return;
    killpending = true;
  }


  
  @Override
  public void run()
  {
    int i, j, k;
    try
    {
      if ( image != null )
      {
        BufferedImage[] images = new BufferedImage[1];
        images[0] = image;
        XLocator xlocator = new XLocatorByCluster(200, 200);
        xlocator.setDebugLevel(10);
        xlocator.setImages(images);
        XLocatorListener listener = new XLocatorListener()
        {
            @Override
            public void notifyProgress( int percentage )
            {
            }

            @Override
            public void notifyComplete( XLocatorReport report, int i )
            {
            }

            @Override
            public void notifyDebugMessage( BufferedImage image, String message )
            {
              GridBagConstraints gbc = new GridBagConstraints();
              gbc.gridx = 0;
              gbc.anchor = GridBagConstraints.LINE_START;
              gbc.insets = new Insets( 2, 2, 2, 2 );
              JLabel label = new JLabel( message );
              if ( image != null )
                label.setIcon( new ImageIcon( image ) );
              centrepanel.add(label,gbc);
              centrepanel.doLayout();
              scrollpane.getViewport().revalidate();
              scrollpane.getViewport().repaint();
            }
        };
    
        xlocator.addProgressListener( listener );
        xlocator.runSynchronously();
        xlocator.removeProgressListener( listener );        
      }
    }
    finally
    {
      running = false;
      killpending = false;
    }
  }
  
  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents()
  {

    scrollpane = new javax.swing.JScrollPane();
    centrepanel = new javax.swing.JPanel();
    bottompanel = new javax.swing.JPanel();
    closebutton = new javax.swing.JButton();

    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

    scrollpane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
    scrollpane.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

    centrepanel.setLayout(new java.awt.GridBagLayout());
    scrollpane.setViewportView(centrepanel);

    getContentPane().add(scrollpane, java.awt.BorderLayout.CENTER);

    closebutton.setText("Close");
    closebutton.setMinimumSize(new java.awt.Dimension(250, 150));
    closebutton.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        closebuttonActionPerformed(evt);
      }
    });
    bottompanel.add(closebutton);

    getContentPane().add(bottompanel, java.awt.BorderLayout.SOUTH);

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void closebuttonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_closebuttonActionPerformed
  {//GEN-HEADEREND:event_closebuttonActionPerformed
    this.kill();
    this.setVisible(false);
  }//GEN-LAST:event_closebuttonActionPerformed

  

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JPanel bottompanel;
  private javax.swing.JPanel centrepanel;
  private javax.swing.JButton closebutton;
  private javax.swing.JScrollPane scrollpane;
  // End of variables declaration//GEN-END:variables

}
